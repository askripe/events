{{- define "header"}}
  {{- $t := timeFormat .time "02.01.06 15:04:05"}}
  {{- printf "<b>%s</b>: %s / %s\n<b>%s</b>: %s\nby <i>%s</i>" .operation .kind .location .orchestration $t .user.name}}
{{- end}}
{{- define "k8s-namespace"}}{{- end}}
{{- define "k8s-node"}}{{- end}}
{{- define "k8s-replicaset"}}{{- end}}
{{- define "k8s-statefulset"}}
  {{- printf "\n<b>Replicas</b> => %.0f\n<b>Selector</b> => %s" .object.spec.replicas .object.spec.selector}}
  {{- template "k8s-pod" .object.spec.template}}
{{- end}}
{{- define "k8s-daemonset"}}{{- end}}
{{- define "k8s-secret"}}{{- end}}
{{- define "k8s-ingress"}}{{- end}}
{{- define "k8s-cronjob"}}{{- end}}
{{- define "k8s-job"}}{{- end}}
{{- define "k8s-configmap"}}{{- end}}
{{- define "k8s-role"}}{{- end}}
{{- define "k8s-deployment"}}
  {{- printf "\n<b>Replicas</b> => %.0f\n<b>Selector</b> => %s" .object.spec.replicas .object.spec.selector}}
  {{- template "k8s-pod" .object.spec.template}}
{{- end}}
{{- define "k8s-service"}}
  {{- printf "\n<b>%s</b> => %s" .object.spec.type .object.spec.clusterIP}}
  {{- range .object.spec.ports}}
    {{- printf "\n<b>%s</b> %.0f => %.0f" .protocol .port .targetPort}}
  {{- end}}
  {{- printf "\n<b>Selector</b> => %s" .object.spec.selector}}
{{- end}}
{{- define "k8s-pod"}}
  {{- range .spec.containers}}
    {{- printf "\n<b>%s</b> => %s" .name .image}}
    {{- range .ports}}
      {{- printf " [%s: %.0f]" .protocol .containerPort}}
    {{- end}}   
  {{- end}}
{{- end}}
{{- define "text"}}
  {{- if .orchestration | regexMatch "k8s.*"}}
    {{- if .object}}
      {{- if eq .kind "Namespace"}}{{template "header" .}}{{template "k8s-namespace" .}}{{end}}
      {{- if eq .kind "Node"}}{{template "header" .}}{{template "k8s-node" .}}{{end}}
      {{- if eq .kind "ReplicaSet"}}{{template "header" .}}{{template "k8s-replicaset" .}}{{end}}
      {{- if eq .kind "StatefulSet"}}{{template "header" .}}{{template "k8s-statefulset" .}}{{end}}
      {{- if eq .kind "DaemonSet"}}{{template "header" .}}{{template "k8s-daemonset" .}}{{end}}
      {{- if eq .kind "Secret"}}{{template "header" .}}{{template "k8s-secret" .}}{{end}}
      {{- if eq .kind "Ingress"}}{{template "header" .}}{{template "k8s-ingress" .}}{{end}}
      {{- if eq .kind "CronJob"}}{{template "header" .}}{{template "k8s-cronjob" .}}{{end}}
      {{- if eq .kind "Job"}}{{template "header" .}}{{template "k8s-job" .}}{{end}}
      {{- if eq .kind "ConfigMap"}}{{template "header" .}}{{template "k8s-configmap" .}}{{end}}
      {{- if eq .kind "Role"}}{{template "header" .}}{{template "k8s-role" .}}{{end}}
      {{- if eq .kind "Deployment"}}{{template "header" .}}{{template "k8s-deployment" .}}{{end}}
      {{- if eq .kind "Service"}}{{template "header" .}}{{template "k8s-service" .}}{{end}}
      {{- if eq .kind "Pod"}}{{template "header" .}}{{template "k8s-pod" .object}}{{end}}
    {{- else}}{{template "header" .}}{{end}}
  {{- end}}  
  {{- if .orchestration  | regexMatch "rancher.*"}}
    {{- .kind}} => rancher
  {{- end}}
{{- end}}
{{- define "telegram"}}{{- if not (.user.name | regexMatch "(system:serviceaccount:*|system:*)")}}{"text":"{{template "text" .}}","parse_mode":"html","disable_web_page_preview":false,"disable_notification":true}{{- end}}{{- end}}  

